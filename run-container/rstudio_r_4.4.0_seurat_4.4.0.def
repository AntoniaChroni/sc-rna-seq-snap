#
# Combined build stages
#
# singularity build --fakeroot combined.sif combined.def 2>&1 | tee combined.build_log.txt
# singularity build --fakeroot --sandbox /scratch_local/sandbox combined.sif
# singularity shell --fakeroot --writable /scratch_local/sandbox
#
# bsub -R "rusage[mem=64GB]" singularity build --fakeroot combined.sif combined.def
#
# This full build can take around one hour, but may be somewhat faster if run
# with multiple CPUs as mksquashfs seems to be able to use multiple cores.
#

# https://hub.docker.com/layers/rocker/rstudio/4.4.0/images/sha256-d3ab1f3f4e0d7f5db50a60df40b142a32463ecae279d9a463813f6d92bac36a7

Bootstrap: docker
From: rocker/rstudio:4.4.0

%post
    #
    # Ensure core system software is up to date and ready
    #

    apt-get -y update
    apt-get -y install gdebi-core python3-pip python3-venv

    #
    # Set up virtual env; we need this to keep the existing numpy/scipy/pandas
    # versions cohesive; otherwise, we get mistmatches with e.g. multiqc in the
    # analysis pipelines. After activating the virtual env, we should have:
    #
    # (container-venv) Apptainer> pip3 list
    # Package         Version
    # --------------- -----------
    # numpy           2.2.1
    # pandas          2.2.3
    # scipy           1.14.1
    #
    # Note: need to "source" the virtual env activate script, not just run it.
    #

    python3 -m venv /opt/container-venv
    . /opt/container-venv/bin/activate

    # Avoids BiocManager errors in Rhtslib; "fatal error: lzma.h: No such file or directory" etc
    apt-get -y install liblzma-dev libbz2-dev

    # Avoids BiocManager errors in bluster; "libglpk.so.40: cannot open shared object file: No such file or directory"
    apt-get -y install libglpk-dev

    # Avoids BiocManager errors in infercnv: "libjags.so.4: cannot open shared object file: No such file or directory"
    apt-get -y install r-cran-rjags

    # Avoids errors in "Rscript -e 'devtools::install_github("welch-lab/RcppPlanc")'"
    apt-get -y install cmake libhdf5-dev

    # Needed for pipeline stages
    apt-get install -y openjdk-8-jre-headless fastqc multiqc curl

    # Needed for the cluster-cell-calling stage etc
    pip3 install pandas leidenalg

    #
    # Use latest R sources to avoid e.g. "matrixStats" version too low for "MatrixGenerics"
    #

    echo "options(repos = c(CRAN = 'https://packagemanager.posit.co/cran/__linux__/jammy/latest'))" >> /usr/local/lib/R/etc/Rprofile.site

    #
    # Install required R package managers
    #

    Rscript -e 'install.packages("usethis")'
    Rscript -e 'install.packages(c("BiocManager", "devtools", "remotes"))'

    #
    # This is a fairly time consuming section; lots built from source.
    #

    Rscript -e 'BiocManager::install(c("miQC"))'
    Rscript -e 'BiocManager::install(c("scater"))'
    Rscript -e 'BiocManager::install(c("scDblFinder"))'
    Rscript -e 'BiocManager::install(c("celldex"))'
    Rscript -e 'BiocManager::install(c("SingleR"))'
    Rscript -e 'BiocManager::install(c("infercnv"))'

    #
    # Some github-based R modules; RcppPlanc needs previously installed cmake
    # and libhdf5-dev
    #

    Rscript -e 'devtools::install_github("igordot/scooter")'
    Rscript -e 'devtools::install_github("welch-lab/RcppPlanc")'
    Rscript -e 'devtools::install_github("kharchenkolab/numbat")'
    Rscript -e 'devtools::install_github("welch-lab/liger")'

    #
    # Removed "grid" from installs as triggered the warning message:
    # "package 'grid' is a base package, and should not be updated"
    # "grid" was then subsequently ignored by the installer anyway.
    #

    Rscript -e 'install.packages(c("clustree", "cowplot", "data.table"))'
    Rscript -e 'install.packages(c("flexmix", "flextable", "forcats"))'
    Rscript -e 'install.packages(c("fs", "future", "GGally"))'
    Rscript -e 'install.packages(c("ggh4x", "ggplot2", "ggpmisc"))'
    Rscript -e 'install.packages(c("ggrepel", "ggthemes"))'
    Rscript -e 'install.packages(c("harmony", "igraph", "irlba"))'
    Rscript -e 'install.packages(c("knitr", "optparse"))'
    Rscript -e 'install.packages(c("patchwork", "purrr", "RColorBrewer"))'
    Rscript -e 'install.packages(c("remotes", "reshape2", "rliger"))'
    Rscript -e 'install.packages(c("rlist", "R.utils", "SeuratObject"))'
    Rscript -e 'install.packages(c("shiny", "SoupX", "stringr"))'
    Rscript -e 'install.packages(c("tidytext", "tidyverse", "tinytex", "yaml"))'

    # Prevent errors in dependencies for the following
    apt-get -y update

    #
    # Was Rscript -e 'remotes::install_version("Seurat", "4.4.0", repos = c("https://packagemanager.posit.co/cran/__linux__/jammy/latest"))'
    # but we specified the latest CRAN repo earlier so repo URL is redundant.
    # Default version of Seurat is higher than 4.4.0 and is incompatible with
    # input object format so install specific version. We also need to fix the
    # SeuratWrappers, as the existing version is incompatible with 4.4.0:
    #
    # https://github.com/satijalab/seurat-wrappers/issues/169
    #
    # We need to install the Seurat wrappers first, as otherwise they will
    # override the install of Seurat 4.4.0 with a later version of Seurat.
    #
    Rscript -e 'remotes::install_github("satijalab/seurat-wrappers@community-vignette")'
    Rscript -e 'remotes::install_version("Seurat", version = "4.4.0")'

    #
    # As per Antonia's request via Teams, 12/16/2024 09:46.
    #

    Rscript -e 'install.packages("Signac")'
    
    
    # Install CellRanger v8.0.1
    # You will need to download the desired version from here: https://www.10xgenomics.com/support/software/cell-ranger/downloads/previous-versions
    # Save on the same folder where Dockerfile is located
    # You should also replace the link with the one from the most recent download as the url expires after 1-2 days
    # Set environment variables
    curl -o cellranger-8.0.1.tar.gz "https://cf.10xgenomics.com/releases/cell-exp/cellranger-8.0.1.tar.gz?Expires=1733387810&Key-Pair-Id=APKAI7S6A5RYOXBWRPDA&Signature=EEQ85~Ek1~O32n3Og5thXwhUy5WkoMODkh3ssf~WyRQ47sGkMs-uW6SBRRoDVxyQMZzWzNBqpxgesMvNCTxJpPQogB9vK~6rUlIPtwxdoeG-HdWjQvrOZNw5wrUSt3iITZiI9HFrqgakuNz0d79TBX4aBUsLv4~FAqtswhBeP1-nRr5t2U5BDVWSQjW-55mZiTI6gADSSO4PXzYYCy9PTS9RVQ65tqtRWl~u8jmtcdJkzUKoTikHp5ipoLKkwMva1ZGTX6X9MW1Ukanpw2Jv1fKSI0rO9NfLjea19QUgC6jXzZEHO21UPc-pLJv2UrH6lYR~AaAN-MG4p7n5mIjSRQ__"
    tar -xvzf cellranger-8.0.1.tar.gz -C /opt


%environment
    export LC_ALL=C
    # Set virtual environment variables
    export VIRTUAL_ENV=/opt/container-venv
    export PATH=/opt/container-venv/bin:$PATH

%runscript
    # Adjust as needed!
    . /opt/container-venv/bin/activate
	exec "$@"

